{"ast":null,"code":"const _require = require('../jwk/key/secp256k1_crv'),\n      secp256k1 = _require.name;\n\nmodule.exports.KEYOBJECT = Symbol('KEYOBJECT');\nmodule.exports.PRIVATE_MEMBERS = Symbol('PRIVATE_MEMBERS');\nmodule.exports.PUBLIC_MEMBERS = Symbol('PUBLIC_MEMBERS');\nmodule.exports.THUMBPRINT_MATERIAL = Symbol('THUMBPRINT_MATERIAL');\nmodule.exports.JWK_MEMBERS = Symbol('JWK_MEMBERS');\nmodule.exports.KEY_MANAGEMENT_ENCRYPT = Symbol('KEY_MANAGEMENT_ENCRYPT');\nmodule.exports.KEY_MANAGEMENT_DECRYPT = Symbol('KEY_MANAGEMENT_DECRYPT');\nconst USES_MAPPING = {\n  sig: new Set(['sign', 'verify']),\n  enc: new Set(['encrypt', 'decrypt', 'wrapKey', 'unwrapKey', 'deriveKey'])\n};\nconst OPS = new Set([...USES_MAPPING.sig, ...USES_MAPPING.enc]);\nconst USES = new Set(Object.keys(USES_MAPPING));\nmodule.exports.USES_MAPPING = USES_MAPPING;\nmodule.exports.OPS = OPS;\nmodule.exports.USES = USES;\nmodule.exports.OKP_CURVES = new Set(['Ed25519', 'Ed448', 'X25519', 'X448']);\nmodule.exports.EC_CURVES = new Set(['P-256', secp256k1, 'P-384', 'P-521']);\nmodule.exports.ECDH_ALGS = ['ECDH-ES', 'ECDH-ES+A128KW', 'ECDH-ES+A192KW', 'ECDH-ES+A256KW'];\nmodule.exports.KEYLENGTHS = {\n  'A128CBC-HS256': 256,\n  'A192CBC-HS384': 384,\n  'A256CBC-HS512': 512,\n  A128GCM: 128,\n  A192GCM: 192,\n  A256GCM: 256\n};\n\nif ('electron' in process.versions) {\n  module.exports.OKP_CURVES.delete('Ed448');\n  module.exports.OKP_CURVES.delete('X25519');\n  module.exports.OKP_CURVES.delete('X448');\n  module.exports.EC_CURVES.delete(secp256k1);\n  module.exports.ECDH_ALGS.splice(1, module.exports.ECDH_ALGS.length - 1);\n}","map":null,"metadata":{},"sourceType":"script"}