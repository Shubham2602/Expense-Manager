{"ast":null,"code":"var _objectWithoutProperties = require(\"F:\\\\ReactJS\\\\react-oubywa\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\n/* eslint-disable camelcase */\nconst _require = require('util'),\n      format = _require.format;\n\nconst assign = require('lodash/assign');\n\nconst makeError = require('make-error');\n\nfunction OPError({\n  error_description,\n  error,\n  error_uri,\n  session_state,\n  state,\n  scope\n}, response) {\n  OPError.super.call(this, !error_description ? error : \"\".concat(error, \" (\").concat(error_description, \")\"));\n  assign(this, {\n    error\n  }, error_description && {\n    error_description\n  }, error_uri && {\n    error_uri\n  }, state && {\n    state\n  }, scope && {\n    scope\n  }, session_state && {\n    session_state\n  });\n\n  if (response) {\n    Object.defineProperty(this, 'response', {\n      value: response\n    });\n  }\n}\n\nmakeError(OPError);\n\nfunction RPError(...args) {\n  if (typeof args[0] === 'string') {\n    RPError.super.call(this, format(...args));\n  } else {\n    const _args$ = args[0],\n          message = _args$.message,\n          printf = _args$.printf,\n          response = _args$.response,\n          rest = _objectWithoutProperties(_args$, [\"message\", \"printf\", \"response\"]);\n\n    if (printf) {\n      RPError.super.call(this, format(...printf));\n    } else {\n      RPError.super.call(this, message);\n    }\n\n    assign(this, rest);\n\n    if (response) {\n      Object.defineProperty(this, 'response', {\n        value: response\n      });\n    }\n  }\n}\n\nmakeError(RPError);\nmodule.exports = {\n  OPError,\n  RPError\n};","map":null,"metadata":{},"sourceType":"script"}