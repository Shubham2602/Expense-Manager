{"ast":null,"code":"const CODES = {\n  JOSEAlgNotWhitelisted: 'ERR_JOSE_ALG_NOT_WHITELISTED',\n  JOSECritNotUnderstood: 'ERR_JOSE_CRIT_NOT_UNDERSTOOD',\n  JOSEInvalidEncoding: 'ERR_JOSE_INVALID_ENCODING',\n  JOSEMultiError: 'ERR_JOSE_MULTIPLE_ERRORS',\n  JOSENotSupported: 'ERR_JOSE_NOT_SUPPORTED',\n  JWEDecryptionFailed: 'ERR_JWE_DECRYPTION_FAILED',\n  JWEInvalid: 'ERR_JWE_INVALID',\n  JWKImportFailed: 'ERR_JWK_IMPORT_FAILED',\n  JWKInvalid: 'ERR_JWK_INVALID',\n  JWKKeySupport: 'ERR_JWK_KEY_SUPPORT',\n  JWKSNoMatchingKey: 'ERR_JWKS_NO_MATCHING_KEY',\n  JWSInvalid: 'ERR_JWS_INVALID',\n  JWSVerificationFailed: 'ERR_JWS_VERIFICATION_FAILED',\n  JWTClaimInvalid: 'ERR_JWT_CLAIM_INVALID',\n  JWTMalformed: 'ERR_JWT_MALFORMED'\n};\nconst DEFAULT_MESSAGES = {\n  JWEDecryptionFailed: 'decryption operation failed',\n  JWEInvalid: 'JWE invalid',\n  JWKSNoMatchingKey: 'no matching key found in the KeyStore',\n  JWSInvalid: 'JWS invalid',\n  JWSVerificationFailed: 'signature verification failed'\n};\n\nclass JOSEError extends Error {\n  constructor(message) {\n    super(message);\n\n    if (message === undefined) {\n      this.message = DEFAULT_MESSAGES[this.constructor.name];\n    }\n\n    this.name = this.constructor.name;\n    this.code = CODES[this.constructor.name];\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n\nconst isMulti = e => e instanceof JOSEMultiError;\n\nclass JOSEMultiError extends JOSEError {\n  constructor(errors) {\n    super();\n    let i;\n\n    while ((i = errors.findIndex(isMulti)) && i !== -1) {\n      errors.splice(i, 1, ...errors[i]);\n    }\n\n    Object.defineProperty(this, 'errors', {\n      value: errors\n    });\n  }\n\n  *[Symbol.iterator]() {\n    for (const error of this.errors) {\n      yield error;\n    }\n  }\n\n}\n\nmodule.exports.JOSEError = JOSEError;\nmodule.exports.JOSEAlgNotWhitelisted = class JOSEAlgNotWhitelisted extends JOSEError {};\nmodule.exports.JOSECritNotUnderstood = class JOSECritNotUnderstood extends JOSEError {};\nmodule.exports.JOSEInvalidEncoding = class JOSEInvalidEncoding extends JOSEError {};\nmodule.exports.JOSEMultiError = JOSEMultiError;\nmodule.exports.JOSENotSupported = class JOSENotSupported extends JOSEError {};\nmodule.exports.JWEDecryptionFailed = class JWEDecryptionFailed extends JOSEError {};\nmodule.exports.JWEInvalid = class JWEInvalid extends JOSEError {};\nmodule.exports.JWKImportFailed = class JWKImportFailed extends JOSEError {};\nmodule.exports.JWKInvalid = class JWKInvalid extends JOSEError {};\nmodule.exports.JWKKeySupport = class JWKKeySupport extends JOSEError {};\nmodule.exports.JWKSNoMatchingKey = class JWKSNoMatchingKey extends JOSEError {};\nmodule.exports.JWSInvalid = class JWSInvalid extends JOSEError {};\nmodule.exports.JWSVerificationFailed = class JWSVerificationFailed extends JOSEError {};\nmodule.exports.JWTClaimInvalid = class JWTClaimInvalid extends JOSEError {};\nmodule.exports.JWTMalformed = class JWTMalformed extends JOSEError {};","map":null,"metadata":{},"sourceType":"script"}