{"ast":null,"code":"var _slicedToArray = require(\"F:\\\\ReactJS\\\\react-oubywa\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nconst _require = require('assert'),\n      assert = _require.strict;\n\nconst _require2 = require('util'),\n      inspect = _require2.inspect;\n\nconst _require3 = require('os'),\n      EOL = _require3.EOL;\n\nconst _require4 = require('../../help/runtime_support'),\n      keyObjectSupported = _require4.keyObjectSupported;\n\nconst _require5 = require('../../help/key_object'),\n      createPublicKey = _require5.createPublicKey;\n\nconst _require6 = require('../../help/key_utils'),\n      keyObjectToJWK = _require6.keyObjectToJWK;\n\nconst _require7 = require('../../help/consts'),\n      THUMBPRINT_MATERIAL = _require7.THUMBPRINT_MATERIAL,\n      PUBLIC_MEMBERS = _require7.PUBLIC_MEMBERS,\n      PRIVATE_MEMBERS = _require7.PRIVATE_MEMBERS,\n      JWK_MEMBERS = _require7.JWK_MEMBERS,\n      KEYOBJECT = _require7.KEYOBJECT,\n      USES_MAPPING = _require7.USES_MAPPING,\n      OPS = _require7.OPS,\n      USES = _require7.USES;\n\nconst isObject = require('../../help/is_object');\n\nconst thumbprint = require('../thumbprint');\n\nconst errors = require('../../errors');\n\nclass Key {\n  constructor(keyObject, {\n    alg,\n    use,\n    kid,\n    key_ops: ops,\n    x5c,\n    x5t,\n    'x5t#S256': x5t256\n  } = {}) {\n    if (use !== undefined) {\n      if (typeof use !== 'string' || !USES.has(use)) {\n        throw new TypeError('`use` must be either \"sig\" or \"enc\" string when provided');\n      }\n    }\n\n    if (alg !== undefined) {\n      if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('`alg` must be a non-empty string when provided');\n      }\n    }\n\n    if (kid !== undefined) {\n      if (typeof kid !== 'string' || !kid) {\n        throw new TypeError('`kid` must be a non-empty string when provided');\n      }\n    }\n\n    if (ops !== undefined) {\n      if (!Array.isArray(ops) || !ops.length || ops.some(o => typeof o !== 'string')) {\n        throw new TypeError('`key_ops` must be a non-empty array of strings when provided');\n      }\n\n      ops = Array.from(new Set(ops)).filter(x => OPS.has(x));\n    }\n\n    if (ops && use) {\n      if (use === 'enc' && ops.some(x => USES_MAPPING.sig.has(x)) || use === 'sig' && ops.some(x => USES_MAPPING.enc.has(x))) {\n        throw new errors.JWKInvalid('inconsistent JWK \"use\" and \"key_ops\"');\n      }\n    }\n\n    if (keyObjectSupported && x5c !== undefined) {\n      if (!Array.isArray(x5c) || !x5c.length || x5c.some(c => typeof c !== 'string')) {\n        throw new TypeError('`x5c` must be an array of one or more PKIX certificates when provided');\n      }\n\n      x5c.forEach((cert, i) => {\n        let publicKey;\n\n        try {\n          publicKey = createPublicKey({\n            key: \"-----BEGIN CERTIFICATE-----\".concat(EOL).concat(cert.match(/.{1,64}/g).join(EOL)).concat(EOL, \"-----END CERTIFICATE-----\"),\n            format: 'pem'\n          });\n        } catch (err) {\n          throw new errors.JWKInvalid(\"`x5c` member at index \".concat(i, \" is not a valid base64-encoded DER PKIX certificate\"));\n        }\n\n        if (i === 0) {\n          try {\n            assert.deepEqual(publicKey.export({\n              type: 'spki',\n              format: 'der'\n            }), (keyObject.type === 'public' ? keyObject : createPublicKey(keyObject)).export({\n              type: 'spki',\n              format: 'der'\n            }));\n          } catch (err) {\n            throw new errors.JWKInvalid('The key in the first `x5c` certificate MUST match the public key represented by the JWK');\n          }\n        }\n      });\n    }\n\n    Object.defineProperties(this, {\n      [KEYOBJECT]: {\n        value: isObject(keyObject) ? undefined : keyObject\n      },\n      keyObject: {\n        get() {\n          if (!keyObjectSupported) {\n            throw new errors.JOSENotSupported('KeyObject class is not supported in your Node.js runtime version');\n          }\n\n          return this[KEYOBJECT];\n        }\n\n      },\n      type: {\n        value: keyObject.type\n      },\n      private: {\n        value: keyObject.type === 'private'\n      },\n      public: {\n        value: keyObject.type === 'public'\n      },\n      secret: {\n        value: keyObject.type === 'secret'\n      },\n      alg: {\n        value: alg,\n        enumerable: alg !== undefined\n      },\n      use: {\n        value: use,\n        enumerable: use !== undefined\n      },\n      x5c: {\n        value: x5c,\n        enumerable: x5c !== undefined\n      },\n      key_ops: {\n        enumerable: ops !== undefined,\n        ...(ops ? {\n          get() {\n            return [...ops];\n          }\n\n        } : {\n          value: undefined\n        })\n      },\n      kid: {\n        enumerable: true,\n        ...(kid ? {\n          value: kid\n        } : {\n          get() {\n            Object.defineProperty(this, 'kid', {\n              value: this.thumbprint,\n              configurable: false\n            });\n            return this.kid;\n          },\n\n          configurable: true\n        })\n      },\n      ...(x5c ? {\n        x5t: {\n          enumerable: true,\n          ...(x5t ? {\n            value: x5t\n          } : {\n            get() {\n              Object.defineProperty(this, 'x5t', {\n                value: thumbprint.x5t(this.x5c[0]),\n                configurable: false\n              });\n              return this.x5t;\n            },\n\n            configurable: true\n          })\n        }\n      } : undefined),\n      ...(x5c ? {\n        'x5t#S256': {\n          enumerable: true,\n          ...(x5t256 ? {\n            value: x5t256\n          } : {\n            get() {\n              Object.defineProperty(this, 'x5t#S256', {\n                value: thumbprint['x5t#S256'](this.x5c[0]),\n                configurable: false\n              });\n              return this['x5t#S256'];\n            },\n\n            configurable: true\n          })\n        }\n      } : undefined),\n      thumbprint: {\n        get() {\n          Object.defineProperty(this, 'thumbprint', {\n            value: thumbprint.kid(this[THUMBPRINT_MATERIAL]()),\n            configurable: false\n          });\n          return this.thumbprint;\n        },\n\n        configurable: true\n      }\n    });\n  }\n\n  toPEM(priv = false, encoding = {}) {\n    if (this.secret) {\n      throw new TypeError('symmetric keys cannot be exported as PEM');\n    }\n\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private');\n    }\n\n    const _encoding$type = encoding.type,\n          type = _encoding$type === void 0 ? priv ? 'pkcs8' : 'spki' : _encoding$type,\n          cipher = encoding.cipher,\n          passphrase = encoding.passphrase;\n    let keyObject = this[KEYOBJECT];\n\n    if (!priv) {\n      if (this.private) {\n        keyObject = createPublicKey(keyObject);\n      }\n\n      if (cipher || passphrase) {\n        throw new TypeError('cipher and passphrase can only be applied when exporting private keys');\n      }\n    }\n\n    if (priv) {\n      return keyObject.export({\n        format: 'pem',\n        type,\n        cipher,\n        passphrase\n      });\n    }\n\n    return keyObject.export({\n      format: 'pem',\n      type\n    });\n  }\n\n  toJWK(priv = false) {\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private');\n    }\n\n    const components = [...this.constructor[priv ? PRIVATE_MEMBERS : PUBLIC_MEMBERS]].map(k => [k, this[k]]);\n    const result = {};\n    Object.keys(components).forEach(key => {\n      const _components$key = _slicedToArray(components[key], 2),\n            k = _components$key[0],\n            v = _components$key[1];\n\n      result[k] = v;\n    });\n    result.kty = this.kty;\n    result.kid = this.kid;\n\n    if (this.alg) {\n      result.alg = this.alg;\n    }\n\n    if (this.key_ops && this.key_ops.length) {\n      result.key_ops = this.key_ops;\n    }\n\n    if (this.use) {\n      result.use = this.use;\n    }\n\n    if (this.x5c) {\n      result.x5c = this.x5c;\n    }\n\n    if (this.x5t) {\n      result.x5t = this.x5t;\n    }\n\n    if (this['x5t#S256']) {\n      result['x5t#S256'] = this['x5t#S256'];\n    }\n\n    return result;\n  }\n\n  [JWK_MEMBERS]() {\n    const props = this[KEYOBJECT].type === 'private' ? this.constructor[PRIVATE_MEMBERS] : this.constructor[PUBLIC_MEMBERS];\n    Object.defineProperties(this, [...props].reduce((acc, component) => {\n      acc[component] = {\n        get() {\n          const jwk = keyObjectToJWK(this[KEYOBJECT]);\n          Object.defineProperties(this, Object.entries(jwk).filter(([key]) => props.has(key)).reduce((acc, [key, value]) => {\n            acc[key] = {\n              value,\n              enumerable: this.constructor[PUBLIC_MEMBERS].has(key),\n              configurable: false\n            };\n            return acc;\n          }, {}));\n          return this[component];\n        },\n\n        enumerable: this.constructor[PUBLIC_MEMBERS].has(component),\n        configurable: true\n      };\n      return acc;\n    }, {}));\n  }\n  /* c8 ignore next 8 */\n\n\n  [inspect.custom]() {\n    return \"\".concat(this.constructor.name, \" \").concat(inspect(this.toJWK(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    }));\n  }\n  /* c8 ignore next 3 */\n\n\n  [THUMBPRINT_MATERIAL]() {\n    throw new Error(\"\\\"[THUMBPRINT_MATERIAL]()\\\" is not implemented on \".concat(this.constructor.name));\n  }\n  /* c8 ignore next 3 */\n\n\n  algorithms() {\n    throw new Error(\"\\\"algorithms()\\\" is not implemented on \".concat(this.constructor.name));\n  }\n  /* c8 ignore next 3 */\n\n\n  static async generate() {\n    throw new Error(\"\\\"static async generate()\\\" is not implemented on \".concat(this.name));\n  }\n  /* c8 ignore next 3 */\n\n\n  static generateSync() {\n    throw new Error(\"\\\"static generateSync()\\\" is not implemented on \".concat(this.name));\n  }\n  /* c8 ignore next 3 */\n\n\n  static get [PUBLIC_MEMBERS]() {\n    throw new Error(\"\\\"static get [PUBLIC_MEMBERS]()\\\" is not implemented on \".concat(this.name));\n  }\n  /* c8 ignore next 3 */\n\n\n  static get [PRIVATE_MEMBERS]() {\n    throw new Error(\"\\\"static get [PRIVATE_MEMBERS]()\\\" is not implemented on \".concat(this.name));\n  }\n\n}\n\nmodule.exports = Key;","map":null,"metadata":{},"sourceType":"script"}