{"ast":null,"code":"const Got = require('got');\n\nconst defaultsDeep = require('lodash/defaultsDeep');\n\nconst pkg = require('../../package.json');\n\nconst isAbsoluteUrl = require('./is_absolute_url');\n\nconst _require = require('./consts'),\n      HTTP_OPTIONS = _require.HTTP_OPTIONS;\n\nlet DEFAULT_HTTP_OPTIONS;\nlet got;\n\nconst setDefaults = options => {\n  DEFAULT_HTTP_OPTIONS = defaultsDeep(options, DEFAULT_HTTP_OPTIONS);\n  got = Got.extend(DEFAULT_HTTP_OPTIONS);\n};\n\nsetDefaults({\n  followRedirect: false,\n  headers: {\n    'User-Agent': \"\".concat(pkg.name, \"/\").concat(pkg.version, \" (\").concat(pkg.homepage, \")\")\n  },\n  retry: 0,\n  timeout: 2500,\n  throwHttpErrors: false\n});\n\nmodule.exports = function request(options, {\n  mTLS = false\n} = {}) {\n  const url = options.url;\n  isAbsoluteUrl(url);\n  const optsFn = this[HTTP_OPTIONS];\n  let opts;\n\n  if (optsFn) {\n    opts = optsFn.call(this, defaultsDeep(options, DEFAULT_HTTP_OPTIONS));\n  } else {\n    opts = options;\n  }\n\n  if (mTLS && (!opts.key || !opts.cert)) {\n    throw new TypeError('mutual-TLS certificate and key not set');\n  }\n\n  return got(opts);\n};\n\nmodule.exports.setDefaults = setDefaults;","map":null,"metadata":{},"sourceType":"script"}