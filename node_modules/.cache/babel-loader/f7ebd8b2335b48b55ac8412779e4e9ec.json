{"ast":null,"code":"\"use strict\";\n\nconst express = require(\"express\");\n\nconst fetch = require(\"node-fetch\");\n\nconst config = require(\"./config.js\");\n\nconst uuidv1 = require(\"uuid/v1\"); // any non undefined value in param will force manual client configuration\n\n\nconst issuer = require(\"./openIdIssuer\")();\n\nissuer.defaultHttpOptions = {\n  timeout: 3500\n};\nconst app = express();\nglobal.Headers = fetch.Headers;\nlet client;\nlet access_token;\nissuer.then(issuer => {\n  client = new issuer.Client({\n    client_id: config.client_id,\n    client_secret: config.client_secret\n  });\n  app.listen(config.port, () => console.log(\"Sample app listening on port \".concat(config.port, \"!\")));\n});","map":{"version":3,"sources":["F:/ReactJS/react-oubywa/src/index.js"],"names":["express","require","fetch","config","uuidv1","issuer","defaultHttpOptions","timeout","app","global","Headers","client","access_token","then","Client","client_id","client_secret","listen","port","console","log"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,aAAD,CAAtB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAAtB,C,CAEA;;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,gBAAD,CAAP,EAAf;;AACAI,MAAM,CAACC,kBAAP,GAA4B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA5B;AAEA,MAAMC,GAAG,GAAGR,OAAO,EAAnB;AACAS,MAAM,CAACC,OAAP,GAAiBR,KAAK,CAACQ,OAAvB;AAEA,IAAIC,MAAJ;AACA,IAAIC,YAAJ;AAEAP,MAAM,CAACQ,IAAP,CAAYR,MAAM,IAAI;AACpBM,EAAAA,MAAM,GAAG,IAAIN,MAAM,CAACS,MAAX,CAAkB;AACzBC,IAAAA,SAAS,EAAEZ,MAAM,CAACY,SADO;AAEzBC,IAAAA,aAAa,EAAEb,MAAM,CAACa;AAFG,GAAlB,CAAT;AAKAR,EAAAA,GAAG,CAACS,MAAJ,CAAWd,MAAM,CAACe,IAAlB,EAAwB,MACtBC,OAAO,CAACC,GAAR,wCAA4CjB,MAAM,CAACe,IAAnD,OADF;AAGD,CATD","sourcesContent":["\"use strict\";\r\n\r\nconst express = require(\"express\");\r\nconst fetch = require(\"node-fetch\");\r\nconst config = require(\"./config.js\");\r\nconst uuidv1 = require(\"uuid/v1\");\r\n\r\n// any non undefined value in param will force manual client configuration\r\nconst issuer = require(\"./openIdIssuer\")();\r\nissuer.defaultHttpOptions = { timeout: 3500 };\r\n\r\nconst app = express();\r\nglobal.Headers = fetch.Headers;\r\n\r\nlet client;\r\nlet access_token;\r\n\r\nissuer.then(issuer => {\r\n  client = new issuer.Client({\r\n    client_id: config.client_id,\r\n    client_secret: config.client_secret\r\n  });\r\n\r\n  app.listen(config.port, () =>\r\n    console.log(`Sample app listening on port ${config.port}!`)\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}