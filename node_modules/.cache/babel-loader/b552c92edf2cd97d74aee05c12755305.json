{"ast":null,"code":"const base64url = require('base64url');\n\nconst assign = require('lodash/assign');\n\nconst now = require('./helpers/unix_timestamp');\n\nclass TokenSet {\n  /**\n   * @name constructor\n   * @api public\n   */\n  constructor(values) {\n    assign(this, values);\n  }\n  /**\n   * @name expires_in=\n   * @api public\n   */\n\n\n  set expires_in(value) {\n    // eslint-disable-line camelcase\n    this.expires_at = now() + Number(value);\n  }\n  /**\n   * @name expires_in\n   * @api public\n   */\n\n\n  get expires_in() {\n    // eslint-disable-line camelcase\n    return Math.max.apply(null, [this.expires_at - now(), 0]);\n  }\n  /**\n   * @name expired\n   * @api public\n   */\n\n\n  expired() {\n    return this.expires_in === 0;\n  }\n  /**\n   * @name claims\n   * @api public\n   */\n\n\n  claims() {\n    if (!this.id_token) {\n      throw new TypeError('id_token not present in TokenSet');\n    }\n\n    return JSON.parse(base64url.decode(this.id_token.split('.')[1]));\n  }\n\n}\n\nmodule.exports = TokenSet;","map":null,"metadata":{},"sourceType":"script"}