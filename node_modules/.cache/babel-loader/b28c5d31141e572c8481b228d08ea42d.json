{"ast":null,"code":"const _require = require('assert'),\n      assert = _require.strict;\n\nconst generateIV = require('../help/generate_iv');\n\nconst base64url = require('../help/base64url');\n\nmodule.exports = JWA => {\n  ['A128GCMKW', 'A192GCMKW', 'A256GCMKW'].forEach(jwaAlg => {\n    assert(!JWA.keyManagementEncrypt.has(jwaAlg), \"keyManagementEncrypt alg \".concat(jwaAlg, \" already registered\"));\n    assert(!JWA.keyManagementDecrypt.has(jwaAlg), \"keyManagementDecrypt alg \".concat(jwaAlg, \" already registered\"));\n    const encAlg = jwaAlg.substr(0, 7);\n    const encrypt = JWA.encrypt.get(encAlg);\n    const decrypt = JWA.decrypt.get(encAlg);\n    JWA.keyManagementEncrypt.set(jwaAlg, (key, payload) => {\n      const iv = generateIV(jwaAlg);\n\n      const _encrypt = encrypt(key, payload, {\n        iv\n      }),\n            ciphertext = _encrypt.ciphertext,\n            tag = _encrypt.tag;\n\n      return {\n        wrapped: ciphertext,\n        header: {\n          tag: base64url.encodeBuffer(tag),\n          iv: base64url.encodeBuffer(iv)\n        }\n      };\n    });\n    JWA.keyManagementDecrypt.set(jwaAlg, decrypt);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}